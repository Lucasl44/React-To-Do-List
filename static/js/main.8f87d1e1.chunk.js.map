{"version":3,"sources":["components/Input.js","components/Form.js","components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Input","name","value","label","func","className","htmlFor","type","onChange","e","target","Form","handleForm","useState","todo","setToDo","onSubmit","preventDefault","Todo","handleDelete","handleChecked","checked","undefined","onClick","App","output","setOutput","data","map","item","index","classname","newArr","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAUeA,EATD,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACjC,OACI,qCACI,uBAAOC,UAAU,OAAOC,QAASL,EAAjC,SAAwCE,IACxC,uBAAOE,UAAU,WAAWE,KAAK,OAAOL,MAAOA,EAAOM,SAAU,SAACC,GAAD,OAAOL,EAAKK,EAAEC,OAAOR,cCHpFS,EAAO,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACnB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAQA,OACI,uBAAMC,SAPW,SAACP,GAClBA,EAAEQ,iBACFL,EAAY,CAACE,SACbC,EAAQ,KAIR,UACI,cAAC,EAAD,CAAOR,KAAK,OAAON,KAAK,OAAOE,MAAM,SAASD,MAAOY,EAAMV,KAAMW,IACjE,wBAAQR,KAAK,SAAb,0BCEKW,G,MAdJ,SAAC,GAAoD,IAAlDhB,EAAiD,EAAjDA,MAAOiB,EAA0C,EAA1CA,aAAcC,EAA4B,EAA5BA,cAAeC,EAAa,EAAbA,QAChD,OACE,oBAAIhB,UAAS,sBAAiBgB,EAAU,iBAAcC,GAAtD,SACE,sBAAKjB,UAAU,QAAf,UACE,mBAAGA,UAAU,UAAUJ,KAAMC,EAA7B,SAAqCA,IACrC,sBAAKG,UAAU,gBAAf,UACE,uBAAOA,UAAU,QAAQE,KAAK,WAAWN,KAAK,GAAGoB,QAASA,EAASb,SAAUY,IAC7E,wBAAQf,UAAU,YAAYkB,QAASJ,EAAvC,2BC+BGK,EAnCH,WACV,MAA4BX,mBAAS,IAArC,mBAAOY,EAAP,KAAeC,EAAf,KAqBA,OACE,sBAAKrB,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,wBACA,cAAC,EAAD,CAAMA,UAAU,WAAWO,WAtBZ,SAACe,GAClBD,EAAU,GAAD,mBAAKD,GAAL,CAAa,CACpBvB,MAAOyB,EAAKb,KACZO,SAAS,SAoBP,oBAAIhB,UAAU,OAAd,SACGoB,EAAOG,KAAI,SAACC,EAAMC,GAAP,OACZ,cAAC,EAAD,CAAMC,UAAU,YAAY7B,MAAO2B,EAAK3B,MAAmBiB,aAAc,kBAZ5D,SAACW,GACpB,IAAIE,EAAM,YAAOP,GACjBO,EAAOC,OAAOH,EAAO,GACrBJ,EAAUM,GAS0Eb,CAAaW,IAAQV,cAAe,kBAlBpG,SAACU,GACrB,IAAIE,EAAM,YAAOP,GACjBO,EAAOF,GAAOT,SAAWW,EAAOF,GAAOT,QACvCK,EAAUM,GAeoHZ,CAAcU,IAAQT,QAASQ,EAAKR,SAAxGS,YCrB/CI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8f87d1e1.chunk.js","sourcesContent":["import \"./input.css\"\r\nconst Input = ( {name, value, label, func} ) => {\r\n    return (\r\n        <>\r\n            <label className=\"task\" htmlFor={name}>{label}</label>\r\n            <input className=\"inputBox\" type=\"text\" value={value} onChange={(e) => func(e.target.value)}></input>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Input;","import { useState } from \"react\";\r\nimport Input from \"./Input\";\r\nexport const Form = ( {handleForm} ) => {\r\n    const [todo, setToDo] = useState(\"\");\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        handleForm( {todo} );\r\n        setToDo(\"\");\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Input type=\"text\" name=\"todo\" label=\"Task: \" value={todo} func={setToDo} />\r\n            <button type=\"submit\">Add item</button>\r\n        </form>\r\n    )\r\n}\r\n\r\n","import \"./Todo.css\";\r\n\r\nconst Todo = ( {value, handleDelete, handleChecked, checked}) => {\r\n    return (\r\n      <li className={`todoWrapper ${checked ? \"unchecked\" : undefined}`}>\r\n        <div className=\"boxes\">\r\n          <p className=\"entered\" name={value}>{value}</p>\r\n          <div className=\"buttonWrapper\">\r\n            <input className=\"check\" type=\"checkbox\" name=\"\" checked={checked} onChange={handleChecked}/>\r\n            <button className=\"delButton\" onClick={handleDelete}>Del</button>\r\n          </div>  \r\n        </div>\r\n      </li>\r\n    )\r\n  }\r\n\r\n  export default Todo;","import { useState } from 'react';\nimport './App.css';\nimport { Form } from \"./components/Form.js\";\nimport Todo from './components/Todo.js';\n\nconst App = () => {\n  const [output, setOutput] = useState([]);\n  \n  const handleForm = (data) => {\n    setOutput([...output, {\n      value: data.todo,\n      checked: false\n    }]);\n  };\n\n  const handleChecked = (index) => {\n    let newArr = [...output];\n    newArr[index].checked = !newArr[index].checked;\n    setOutput(newArr);\n  };\n\n  const handleDelete = (index) => {\n    let newArr = [...output];\n    newArr.splice(index, 1);\n    setOutput(newArr);\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <h1 className=\"title\">To Do List</h1>\n      <Form className=\"inputBox\" handleForm={handleForm}/>\n        <ul className=\"list\">\n          {output.map((item, index) => (\n          <Todo classname=\"outputBox\" value={item.value} key={index} handleDelete={()=> handleDelete(index)} handleChecked={() => handleChecked(index)} checked={item.checked}/>))}\n        </ul>\n    </div>\n  )\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}